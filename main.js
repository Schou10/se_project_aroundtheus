!function(){"use strict";class e{constructor(e){this._baseUrl=e.baseUrl,this._headers=e.headers}_checkResonse(e){return e.ok?e.json():Promise.reject(`Error: ${e.status}`)}getInitialCards(){return fetch(`${this._baseUrl}/cards`,{method:"GET",headers:this._headers}).then(this._checkResonse)}getUserInfo(){return fetch(`${this._baseUrl}/users/me`,{headers:this._headers}).then(this._checkResonse)}updatUserInfo(e){return fetch(`${this._baseUrl}/users/me`,{method:"PATCH",headers:this._headers,body:JSON.stringify({name:e.name,job:e.job})}).then(this._checkResonse)}addNewCard(e){return fetch(`${this._baseUrl}/cards`,{method:"POST",headers:this._headers,body:JSON.stringify({name:e.name,link:e.link})}).then(this._checkResonse)}deleteCard(e){return fetch(`${this._baseUrl}/cards/${e}`,{method:"DELETE",headers:this._headers}).then(this._checkResonse)}}new e({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{authourization:"Bearer  91b601cc-d5b2-405d-a21a-614e7e8f57e7","Content-Type":"application/json"}});class t{constructor(e,t,s,n){this._name=e.name,this._link=e.link,this._cardSelector=t,this._handleImageClick=s,this._handleDeleteSubmit=n}_getTemplate(){return document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0)}_setEventListeners(){this._likeButton.addEventListener("click",(()=>{this._handleLikeIcon()})),this._deleteButton.addEventListener("click",(()=>{this._handleDeleteSubmit(this)})),this._cardImageElement.addEventListener("click",(()=>{this._handleImageClick({name:this._name,link:this._link})}))}_handleLikeIcon(){this._likeButton.classList.toggle("card__like-button-active")}deleteCard(){this._cardElement.remove(),this._cardElement=null}getView(){return this._cardElement=this._getTemplate(),this._likeButton=this._cardElement.querySelector(".card__like-button"),this._cardImageElement=this._cardElement.querySelector(".card__image"),this._deleteButton=this._cardElement.querySelector(".card__delete-button"),this._cardImageElement.setAttribute("src",this._link),this._cardImageElement.setAttribute("alt",this._name),this._cardElement.querySelector(".card__title").textContent=this._name,this._setEventListeners(),this._cardElement}}class s{constructor(e,t){this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._form=t,this._inputEls=[...this._form.querySelectorAll(this._inputSelector)],this._submitButton=this._form.querySelector(this._submitButtonSelector)}_hideInputError(e){const t=this._form.querySelector(`#${e.id}-error`);e.classList.remove(this._inputErrorClass),t.classList.remove(this._errorClass),t.textContent=""}_showInputError(e){const t=this._form.querySelector(`#${e.id}-error`);e.classList.add(this._inputErrorClass),t.textContent=e.validationMessage,t.classList.add(this._errorClass)}_hasInvalidInput(){return this._inputEls.some((e=>!e.validity.valid))}_toggleButtonState(){this._hasInvalidInput()?this.disableButton():this._enableButton()}_enableButton(){this._submitButton.classList.remove(this._inactiveButtonClass),this._submitButton.disabled=!1}disableButton(){this._submitButton.classList.add(this._inactiveButtonClass),this._submitButton.disabled=!0}_checkInputValidity(e){e.validity.valid?this._hideInputError(e):this._showInputError(e)}_setEventListeners(){this._toggleButtonState(),this._inputEls.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e),this._toggleButtonState()}))})),this._form.addEventListener("reset",(()=>{setTimeout((()=>{this._toggleButtonState()}),0)}))}enableValidation(){this._form.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners()}}class n{constructor(e,t,s){this._nameElement=document.querySelector(e),this._jobElement=document.querySelector(t),this._avatarElement=document.querySelector(s)}getUserInfo(){return{name:this._nameElement.textContent,job:this._jobElement.textContent,avatar:this._avatarElement.src}}setUserInfo(e){this._nameElement.textContent=e.name,this._jobElement.textContent=e.job,this._avatarElement.textContent=e.avatar}}const r={inputSelector:".modal__input",submitButtonSelector:".modal__button",inactiveButtonClass:"modal__button_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error_visible"};class o{constructor(e){this._popupElement=document.querySelector(e)}open(){console.log("Opening modal and adding keydown event listener"),this._popupElement.classList.add("modal_opened"),document.addEventListener("keydown",this._handleEscapeClose)}close(){console.log("Closing modal and removing keydown event listener"),this._popupElement.classList.remove("modal_opened"),document.removeEventListener("keydown",this._handleEscapeClose)}_handleEscapeClose=e=>{console.log("Escape key pressed"),"Escape"!==e.key&&"Esc"!==e.key||this.close()};setEventListeners(){this._closeButton=this._popupElement.querySelector(".modal__close"),this._closeButton.addEventListener("click",(()=>{this.close()})),this._popupElement.addEventListener("click",(e=>{e.target.classList.contains("modal_opened")&&this.close()}))}}class a extends o{constructor(e,t){super(e),this._popupForm=this._popupElement.querySelector(".modal__form"),this._handleFormSubmit=t,this.inputList=this._popupForm.querySelectorAll(".modal__input")}setEventListeners(){super.setEventListeners(),this._popupForm.addEventListener("submit",(e=>{e.preventDefault();const t=this._getInputValues();this._handleFormSubmit(t),this._popupForm.reset()}))}_getInputValues(){const e={};return this.inputList.forEach((t=>{e[t.name]=t.value.trim()})),e}setInputValues(e){console.log(e),this.inputList.forEach((t=>{t.value=e[t.name]}))}}const i=new e({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"91b601cc-d5b2-405d-a21a-614e7e8f57e7","Content-Type":"application/json"}}),l=new class{constructor(e,t){let{data:s,renderer:n}=e;this._data=s,this._renderer=n,this._container=document.querySelector(t)}renderItems(){this._data.forEach((e=>{this._renderer(e)}))}addItems(e){this._container.prepend(e)}}({data:[{name:"Yosemite Valley",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/yosemite.jpg"},{name:"Lake Louisey",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lake-louise.jpg"},{name:"Bald Mountains",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/bald-mountains.jpg"},{name:"Latemar",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/latemar.jpg"},{name:"Vanoise National Park",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/vanoise.jpg"},{name:"Lago di Braies",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lago.jpg"}],renderer:e=>{const t=w(e);l.addItems(t)}},".galary__cards");i.getInitialCards().then((e=>{l.renderItems(e)})).catch((e=>{console.error(e)})),i.getUserInfo().then((e=>{new n("#name","#description","#avatar").getUserInfo(e)})).catch((e=>{console.error(`Error fetching user info: ${e}`)}));const c=new a("#profile-edit-modal",(function(e){userInfo.setUserInfo({name:e.name,job:e.description}),c.close()})),d=new a("#add-card-modal",(function(e){const t=w({name:e.title,link:e.url});l.addItems(t),d.close(),f.reset(),L.disableButton()})),u=new class extends o{constructor(e,t){super(e),this._popupImage=this._popupElement.querySelector(".modal__image"),this._popupTitle=this._popupElement.querySelector(".modal__card-title")}open(e){this._popupImage.src=e.link,this._popupImage.alt=e.name,this._popupTitle.textContent=e.name,super.open()}}("#image-modal",C),h=new a("#delete-modal",B),m=new a("#avatar-modal",(function(e){userInfo.avatarPopup.close()})),_=document.querySelector("#profile-edit-button"),p=document.querySelector("#profile-add-button"),E=document.querySelector("#name-input"),v=document.querySelector("#description-input"),b=(document.querySelector("#avatar-url-input"),document.forms["profile-edit-form"]),f=document.forms["add-card-form"],g=document.forms["delete-form"],k=document.forms["avatar-form"],y=new s(r,b),L=new s(r,f),S=new s(r,g),I=new s(r,k);function w(e){return new t(e,"#card-template",C,B).getView()}function C(e){u.open(e)}function B(e){const t=document.querySelector("#delete-modal"),s=t.querySelector("#delete-confirm-button");t.classList.add("modal_opened"),s.addEventListener("click",(function n(){e.deleteCard(),t.classList.remove("modal_opened"),s.removeEventListener("click",n)}))}y.enableValidation(),L.enableValidation(),S.enableValidation(),I.enableValidation(),_.addEventListener("click",(function(){const e=userInfo.getUserInfo();E.value=e.name,v.value=e.job,c.open()})),p.addEventListener("click",(()=>{d.open()})),c.setEventListeners(),d.setEventListeners(),u.setEventListeners(),h.setEventListeners(),m.setEventListeners()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,